[
    {
      "question": "What is the key concept of the divide and conquer strategy?",
      "options": [
        "Iteratively solve the problem",
        "Divide the problem into smaller subproblems, solve them recursively, and combine results",
        "Directly solve the problem without dividing",
        "Use a brute force approach to solve the problem"
      ],
      "answer": "Divide the problem into smaller subproblems, solve them recursively, and combine results"
    },
    {
      "question": "In the divide and conquer approach for finding the maximum and minimum, how many comparisons are required for a single pair of elements?",
      "options": [
        "1",
        "2",
        "3",
        "4"
      ],
      "answer": "2"
    },
    {
      "question": "What is the time complexity of merge sort in the worst case?",
      "options": [
        "O(n^2)",
        "O(n log n)",
        "O(log n)",
        "O(n)"
      ],
      "answer": "O(n log n)"
    },
    {
      "question": "What is the base case when finding max and min using divide and conquer?",
      "options": [
        "When the array size is greater than 2",
        "When the array size is exactly 2",
        "When the array size is 1",
        "When the array size is zero"
      ],
      "answer": "When the array size is 1"
    },
    {
      "question": "How does merge sort combine the sorted subarrays?",
      "options": [
        "By recursively sorting both arrays",
        "By appending elements from both arrays into a new array",
        "By comparing the smallest elements of each subarray and adding the smallest to the sorted result",
        "By summing the elements of both subarrays"
      ],
      "answer": "By comparing the smallest elements of each subarray and adding the smallest to the sorted result"
    },
    {
      "question": "What is the number of comparisons needed in merge sort for an array of size n?",
      "options": [
        "O(n)",
        "O(n^2)",
        "O(n log n)",
        "O(log n)"
      ],
      "answer": "O(n log n)"
    },
    {
      "question": "What is the primary advantage of the divide and conquer approach for finding max and min?",
      "options": [
        "It is easier to implement",
        "It requires less memory",
        "It reduces the number of comparisons",
        "It has a lower time complexity"
      ],
      "answer": "It reduces the number of comparisons"
    },
    {
      "question": "Which of the following problems cannot be solved using divide and conquer?",
      "options": [
        "Merge Sort",
        "Finding Maximum and Minimum",
        "Linear Search",
        "Binary Search"
      ],
      "answer": "Linear Search"
    },
    {
      "question": "Which is the auxiliary space complexity of merge sort?",
      "options": [
        "O(1)",
        "O(log n)",
        "O(n)",
        "O(n^2)"
      ],
      "answer": "O(n)"
    },
    {
      "question": "How many levels of recursion occur in merge sort for an array of size n?",
      "options": [
        "log n",
        "n log n",
        "n",
        "n^2"
      ],
      "answer": "log n"
    }
  ]


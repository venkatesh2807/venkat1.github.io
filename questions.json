[
  {
    "question": "In the context of algorithms, what does 'efficiency' refer to?",
    "options": [
      "The length of the pseudocode",
      "The amount of time and resources the algorithm uses",
      "The number of comments in the program",
      "The complexity of the programming language used"
    ],
    "correctAnswer": "The amount of time and resources the algorithm uses"
  },
  {
    "question": "What does the random.sample(range(1, length+1), length) function do?",
    "options": [
      "Creates a list with repeated numbers",
      "Produces a sorted list of numbers",
      "Picks length unique numbers randomly from a specified range",
      "Picks numbers with replacement from 1 to length"
    ],
    "correctAnswer": "Picks length unique numbers randomly from a specified range"
  },
  {
    "question": "Which of the following best describes an algorithm with amortized time complexity?",
    "options": [
      "It always runs in constant time per operation",
      "Its average case is the same as the best case",
      "Some operations may be expensive, but the average cost per operation over a sequence is low",
      "It guarantees the worst-case time for every individual operation"
    ],
    "correctAnswer": "Some operations may be expensive, but the average cost per operation over a sequence is low"
  },
  {
    "question": "Why is time measured before and after calling a function in this program?",
    "options": [
      "To count number of function calls",
      "To record how long the function takes to execute",
      "To check memory usage",
      "To delay function execution"
    ],
    "correctAnswer": "To record how long the function takes to execute"
  },
  {
    "question": "Which approach tries all possible solutions until the correct one is found?",
    "options": [
      "Divide and Conquer",
      "Greedy Method",
      "Brute Force",
      "Dynamic Programming"
    ],
    "correctAnswer": "Brute Force"
  },
  {
    "question": "What happens if random.choice() is used on an empty list?",
    "options": [
      "It returns None",
      "It gives a random digit",
      "It raises an IndexError",
      "It outputs zero"
    ],
    "correctAnswer": "It raises an IndexError"
  },
  {
    "question": "Which sorting algorithm has the best average-case time complexity among the following?",
    "options": [
      "Bubble Sort",
      "Insertion Sort",
      "Merge Sort",
      "Selection Sort"
    ],
    "correctAnswer": "Merge Sort"
  },
  {
    "question": "What kind of tasks are best solved using a 'greedy' algorithm approach?",
    "options": [
      "Tasks needing guaranteed optimal answers",
      "Tasks where local choices lead to global solutions",
      "Tasks requiring nested loops only",
      "Tasks without any decisions"
    ],
    "correctAnswer": "Tasks where local choices lead to global solutions"
  },
  {
    "question": "What does the term 'trace table' refer to in algorithm analysis?",
    "options": [
      "A way to sort variables",
      "A method to record variable values at each step",
      "A structure for repeating values",
      "A type of data structure"
    ],
    "correctAnswer": "A method to record variable values at each step"
  },
  {
    "question": "What is the time complexity of searching an item using in in a list?",
    "options": [
      "O(1)",
      "O(log n)",
      "O(n)",
      "O(n log n)"
    ],
    "correctAnswer": "O(n)"
  }
]

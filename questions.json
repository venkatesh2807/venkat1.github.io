[
    {
        "question": "```c\n#include <stdio.h>\n\nint maxSubarraySum(int arr[], int n) {\n    int max_so_far = arr[0];\n    int max_ending_here = arr[0];\n    for (int i = 1; i < n; i++) {\n        max_ending_here = (arr[i] > max_ending_here + arr[i]) ? arr[i] : max_ending_here + arr[i];\n        max_so_far = (max_so_far > max_ending_here) ? max_so_far : max_ending_here;\n    }\n    return max_so_far;\n}\n\nint main() {\n    int arr[] = {-2, -3, 4, -1, -2, 1, 5, -3};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    int max_sum = maxSubarraySum(arr, n);\n    printf(\"Maximum subarray sum: %d\", max_sum);\n    return 0;\n}\n```",
        "options":["7","10","9","5"],
        "correctAnswer": "10"
    },
    {
        "question": "```cpp\n#include <iostream>\nusing namespace std;\n\nint findMajorityElement(int arr[], int n) {\n    int candidate = arr[0];\n    int count = 1;\n    for (int i = 1; i < n; i++) {\n        if (arr[i] == candidate) {\n            count++;\n        } else {\n            count--;\n            if (count == 0) {\n                candidate = arr[i];\n                count = 1;\n            }\n        }\n    }\n    count = 0;\n    for (int i = 0; i < n; i++) {\n        if (arr[i] == candidate) {\n            count++;\n        }\n    }\n    if (count > n / 2) {\n        return candidate;\n    } else {\n        return -1; // No majority element\n    }\n}\n\nint main() {\n    int arr[] = {3, 3, 4, 2, 4, 4, 2, 4, 4};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    int majorityElement = findMajorityElement(arr, n);\n    if (majorityElement != -1) {\n        cout << \"Majority element: \" << majorityElement;\n    } else {\n        cout << \"No majority element found\";\n    }\n    return 0;\n}\n```",
        "options":["Majority element: 2","Majority element: 3","No majority element found","Majority element: 4"],
        "correctAnswer": "Majority element: 4"
    },
    {
        "question": "```c\n#include <stdio.h>\n\nvoid rotateArray(int arr[], int n, int k) {\n    k = k % n;\n    for (int i = 0; i < n; i++) {\n        printf(\"%d \", arr[(i - k + n) % n]);\n    }\n}\n\nint main() {\n    int arr[] = {1, 2, 3, 4, 5};\n    int n = sizeof(arr) / sizeof(arr[0]);\n    int k = 2;\n    rotateArray(arr, n, k);\n    return 0;\n}\n```",
        "options": ["4 5 1 2 3","3 4 5 1 2","2 3 4 5 1","1 2 3 4 5"],
        "correctAnswer": "2 3 4 5 1"
    }
]

